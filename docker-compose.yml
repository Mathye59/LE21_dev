services:
  db:
    image: mysql:8.0
    container_name: le21_db
    environment:
      MYSQL_DATABASE: le_21
      MYSQL_USER: le_21
      MYSQL_PASSWORD: le_21
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3306:3306'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'mysqladmin ping -h localhost -uroot -proot --silent || exit 1',
        ]
      interval: 5s #test si ok
      timeout: 3s #considère echec après 3s
      retries: 30 # essayer 30 fois
      start_period: 40s
    volumes:
      - dbdata:/var/lib/mysql
      - ./backups:/docker-entrypoint-initdb.d:ro

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: /entrypoint.sh
    container_name: le21_api
    environment:
      APP_ENV: dev
      APP_DEBUG: 1
      APP_SECRET: dev
      DB_HOST: db
      DATABASE_URL: 'mysql://le_21:le_21@db:3306/le_21?serverVersion=8.0'
      MAILER_DSN: 'smtp://user:pass@smtp.your-host:587'
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:80'
    volumes:
      - ./api:/var/www/html #  monte le code en bash (Entity visible dans le conteneur)

  front:
    build:
      context: .
      dockerfile: Dockerfile.front
    container_name: le21_front
    environment:
      VITE_API_URL: 'http://127.0.0.1:8080'
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    ports:
      - '5173:5173'
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/api
    depends_on:
      - api
  # PROD — build puis Nginx sur 3000
  # front:
  #   build:
  #     context: .          # idem : ./ ou ./front selon où est le front
  #     dockerfile: Dockerfile.front
  #     args:
  #       VITE_API_URL: "http://127.0.0.1:8080"
  #   container_name: le21_front
  #   ports: ["3000:80"]
  #   depends_on:
  #     - api

volumes:
  dbdata:
